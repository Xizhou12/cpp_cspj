#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
int f(string x,string y){
    int m=x.size();
    int n=y.size();
    vector<vector<int>>v(m+1,vector<int>(n+1,0));
   for(int i=1;i<=m;i++){
       for(int j=1;j<=n;j++){
            if(x[i-1]==y[j-1]){
                v[i][j]=v[i-1][j-1]+1;
            }else{
                v[i][j]=max(v[i-1][j],v[i][j-1]);
            }
        }
    }
    return v[m][n];
}
bool g(string x,string y){
    if(x.size() != y.size()){
        return false;
    }
    return f(x+x,y)==y.size();
}
int main(){
    string x,y;
    cin>>x>>y;
    cout<<g(x,y)<<endl;
    return 0;
}
普通变量
指针（地址）
int x = 3; // c++给你的类型
int* p = &x; // & 这个是取x的地址 int*代表了这是一个int类型的指针

struct Data{

}

struct Student{ //结构体
    int aga; //
    float height;
    int weight;
    int classroom;
    string name;
} // Student 就是一个比较复杂的类型 其次他是你自己可以随意定义的

Student a; //普通变量
Student* p;//  指针

a.age;
union Data data;//
data.value

Union Data* data;
data->value = 3.14;

int x = 42395139;
int y = 12421355;
long long  z = 43694396439625429649265493754396329406514395614359014230531409563426034603204965209465240672306534906
数组是不是
int[] 
double d = 15-17位（整数+小数）
513453416346654263265426 * 1
135435326436245643653464 * 235243654236236

2 + 3 =5
+ 2 3
2 3 +

118 + 42 = 160

abc
cba
   0 1 2 3
   _________
0  0 0 0 0
1  0 0 0 1
2  0 0 1 1
3  0 1 1 1 
i=1,j=1
i=1,j=2
i=1;j=3

i=2.j=1
i=2,j=2
i=3,j=1

csp-jcsp-j

p-jcs

true -> 1
false-> 0
T 
F

abcd
bcde

csppsccsppsc
spsccp

   111
111111
01

n^4+n^2+1 
n^4+2n^2+1
x<=0 and 可能大于等于

1+25+625 (1+25)^2


g[20]